{
	"name": "hoody-code",
	"displayName": "%extension.displayName%",
	"description": "%extension.description%",
	"publisher": "hoodycode",
	"version": "4.103.97",
	"icon": "assets/icons/ai-agent-dark-64px.png",
	"galleryBanner": {
		"color": "#FFFFFF",
		"theme": "light"
	},
	"engines": {
		"vscode": "^1.84.0",
		"node": "20.19.2"
	},
	"extensionKind": [
		"workspace"
	],
	"author": {
		"name": "Hoody Code"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/HoodyNetwork/hoody-agent-server"
	},
	"homepage": "https://hoody.com",
	"categories": [
		"AI",
		"Chat",
		"Programming Languages",
		"Education",
		"Snippets",
		"Testing"
	],
	"keywords": [
		"hoody",
		"claude",
		"dev",
		"mcp",
		"openrouter",
		"coding",
		"agent",
		"autonomous",
		"chatgpt",
		"sonnet",
		"ai",
		"llama",
		"Hoody Code",
		"hoodycode"
	],
	"activationEvents": [
		"onLanguage",
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"walkthroughs": [
			{
				"id": "hoodyCodeWalkthrough",
				"title": "5 ways Hoody Code helps you code",
				"description": "You now have a personal AI coding assistant.",
				"steps": [
					{
						"id": "welcome",
						"title": "Write code for you",
						"description": "Describe what you want to build. Hoody Code will write it from scratch, generate the files, and run them for you.",
						"media": {
							"markdown": "./dist/walkthrough/step1.md"
						}
					},
					{
						"id": "getting-started",
						"title": "Understand your codebase",
						"description": "Need clarity on how something works? Ask Hoody Code about any part of your files and get a clear explanation.",
						"media": {
							"markdown": "./dist/walkthrough/step2.md"
						},
						"content": {
							"path": "./dist/walkthrough/step2.md"
						}
					},
					{
						"id": "modes",
						"title": "Get things working again",
						"description": "Stuck on an error? Hoody Code can find the issue, fix it, and get your code running.",
						"media": {
							"markdown": "./dist/walkthrough/step3.md"
						}
					},
					{
						"id": "code-actions",
						"title": "Plan your logic",
						"description": "Not sure where to start? Map out your logic and structure before writing a single line of code.",
						"media": {
							"markdown": "./dist/walkthrough/step4.md"
						}
					},
					{
						"id": "advanced-features",
						"title": "And more",
						"description": "Improve your prompt, add context, or create your own custom modes.",
						"media": {
							"markdown": "./dist/walkthrough/step5.md"
						}
					}
				]
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "hoody-code-ActivityBar",
					"title": "%views.activitybar.title%",
					"icon": "assets/icons/ai-agent-dark-64px.png",
					"darkIcon": "assets/icons/ai-agent-dark-64px.png"
				}
			]
		},
		"views": {
			"hoody-code-ActivityBar": [
				{
					"type": "webview",
					"id": "hoody-code.SidebarProvider",
					"name": "%views.sidebar.name%",
					"icon": "assets/icons/ai-agent-dark-64px.png",
					"darkIcon": "assets/icons/ai-agent-dark-64px.png"
				}
			]
		},
		"commands": [
			{
				"command": "hoody-code.plusButtonClicked",
				"title": "%command.newTask.title%",
				"icon": "$(add)"
			},
			{
				"command": "hoody-code.mcpButtonClicked",
				"title": "%command.mcpServers.title%",
				"icon": "$(server)"
			},
			{
				"command": "hoody-code.importSettings",
				"title": "%command.importSettings.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.exportSettings",
				"title": "Export Settings",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.promptsButtonClicked",
				"title": "%command.prompts.title%",
				"icon": "$(organization)"
			},
			{
				"command": "hoody-code.historyButtonClicked",
				"title": "%command.history.title%",
				"icon": "$(history)"
			},
			{
				"command": "hoody-code.marketplaceButtonClicked",
				"title": "%command.marketplace.title%",
				"icon": "$(extensions)"
			},
			{
				"command": "hoody-code.popoutButtonClicked",
				"title": "%command.openInEditor.title%",
				"icon": "$(link-external)"
			},
			{
				"command": "hoody-code.settingsButtonClicked",
				"title": "%command.settings.title%",
				"icon": "$(settings-gear)"
			},
			{
				"command": "hoody-code.helpButtonClicked",
				"title": "%command.documentation.title%",
				"icon": "$(question)"
			},
			{
				"command": "hoody-code.openInNewTab",
				"title": "%command.openInNewTab.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.explainCode",
				"title": "%command.explainCode.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.fixCode",
				"title": "%command.fixCode.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.improveCode",
				"title": "%command.improveCode.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.addToContext",
				"title": "%command.addToContext.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.newTask",
				"title": "%command.newTask.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.terminalAddToContext",
				"title": "%command.terminal.addToContext.title%",
				"category": "%extension.displayName%"
			},
			{
				"command": "hoody-code.terminalFixCommand",
				"title": "%command.terminal.fixCommand.title%",
				"category": "%extension.displayName%"
			},
			{
				"command": "hoody-code.terminalExplainCommand",
				"title": "%command.terminal.explainCommand.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.generateTerminalCommand",
				"title": "%command.terminal.generateCommand.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.setCustomStoragePath",
				"title": "%command.setCustomStoragePath.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.focusChatInput",
				"title": "%command.focusInput.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.acceptInput",
				"title": "%command.acceptInput.title%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.profileButtonClicked",
				"title": "%command.profile.title%",
				"icon": "$(account)",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.generateCommitMessage",
				"title": "%command.generateCommitMessage.title%",
				"icon": {
					"light": "assets/icons/ai-agent-dark-64px.svg",
					"dark": "assets/icons/ai-agent-dark-64px.svg"
				},
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.ghost.generateSuggestions",
				"title": "%ghost.commands.generateSuggestions%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.ghost.cancelSuggestions",
				"title": "%ghost.commands.cancelSuggestions%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.ghost.applyCurrentSuggestions",
				"title": "%ghost.commands.applyCurrentSuggestion%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.ghost.applyAllSuggestions",
				"title": "%ghost.commands.applyAllSuggestions%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.ghost.promptCodeSuggestion",
				"title": "%ghost.commands.promptCodeSuggestion%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.ghost.goToNextSuggestion",
				"title": "%ghost.commands.goToNextSuggestion%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.ghost.goToPreviousSuggestion",
				"title": "%ghost.commands.goToPreviousSuggestion%",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.enableApiServer",
				"title": "Enable API Server",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.disableApiServer",
				"title": "Disable API Server",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.copyApiToken",
				"title": "Copy API Token",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.showApiToken",
				"title": "Show API Token",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.regenerateApiToken",
				"title": "Regenerate API Token",
				"category": "%configuration.title%"
			},
			{
				"command": "hoody-code.openStandaloneUI",
				"title": "Open Standalone UI",
				"category": "%configuration.title%"
			}
		],
		"menus": {
			"editor/context": [
				{
					"submenu": "hoody-code.contextMenu",
					"group": "1"
				}
			],
			"hoody-code.contextMenu": [
				{
					"command": "hoody-code.explainCode",
					"group": "1_actions@1"
				},
				{
					"command": "hoody-code.fixCode",
					"group": "1_actions@2"
				},
				{
					"command": "hoody-code.improveCode",
					"group": "1_actions@3"
				},
				{
					"command": "hoody-code.addToContext",
					"group": "1_actions@4"
				}
			],
			"terminal/context": [
				{
					"submenu": "hoody-code.terminalMenu",
					"group": "2"
				}
			],
			"hoody-code.terminalMenu": [
				{
					"command": "hoody-code.terminalAddToContext",
					"group": "1_actions@1"
				},
				{
					"command": "hoody-code.terminalFixCommand",
					"group": "1_actions@2"
				},
				{
					"command": "hoody-code.terminalExplainCommand",
					"group": "1_actions@3"
				}
			],
			"view/title": [
				{
					"command": "hoody-code.plusButtonClicked",
					"group": "navigation@1",
					"when": "view == hoody-code.SidebarProvider"
				},
				{
					"command": "hoody-code.mcpButtonClicked",
					"group": "navigation@2",
					"when": "view == hoody-code.SidebarProvider"
				},
				{
					"command": "hoody-code.marketplaceButtonClicked",
					"group": "navigation@3",
					"when": "view == hoody-code.SidebarProvider"
				},
				{
					"command": "hoody-code.historyButtonClicked",
					"group": "navigation@4",
					"when": "view == hoody-code.SidebarProvider"
				},
				{
					"command": "hoody-code.profileButtonClicked",
					"group": "navigation@5",
					"when": "view == hoody-code.SidebarProvider"
				},
				{
					"command": "hoody-code.settingsButtonClicked",
					"group": "navigation@6",
					"when": "view == hoody-code.SidebarProvider"
				},
				{
					"command": "hoody-code.popoutButtonClicked",
					"group": "navigation@7",
					"when": "view == hoody-code.SidebarProvider"
				},
				{
					"command": "hoody-code.helpButtonClicked",
					"group": "navigation@8",
					"when": "false && view == hoody-code.SidebarProvider"
				}
			],
			"editor/title": [
				{
					"command": "hoody-code.plusButtonClicked",
					"group": "navigation@1",
					"when": "activeWebviewPanelId == hoody-code.TabPanelProvider"
				},
				{
					"command": "hoody-code.mcpButtonClicked",
					"group": "navigation@2",
					"when": "activeWebviewPanelId == hoody-code.TabPanelProvider"
				},
				{
					"command": "hoody-code.historyButtonClicked",
					"group": "navigation@3",
					"when": "activeWebviewPanelId == hoody-code.TabPanelProvider"
				},
				{
					"command": "hoody-code.popoutButtonClicked",
					"group": "navigation@4",
					"when": "activeWebviewPanelId == hoody-code.TabPanelProvider"
				},
				{
					"command": "hoody-code.settingsButtonClicked",
					"group": "navigation@5",
					"when": "activeWebviewPanelId == hoody-code.TabPanelProvider"
				},
				{
					"command": "hoody-code.helpButtonClicked",
					"group": "navigation@6",
					"when": "activeWebviewPanelId == hoody-code.TabPanelProvider"
				}
			],
			"scm/input": [
				{
					"command": "hoody-code.generateCommitMessage",
					"group": "navigation"
				}
			],
			"scm/title": [
				{
					"command": "hoody-code.generateCommitMessage",
					"when": "scmProvider == git",
					"group": "navigation"
				}
			]
		},
		"keybindings": [
			{
				"command": "hoody-code.focusChatInput",
				"key": "ctrl+shift+a",
				"mac": "cmd+shift+a",
				"when": "true"
			},
			{
				"command": "editor.action.inlineSuggest.commit",
				"key": "tab",
				"when": "inlineSuggestionVisible && editorTextFocus && !editorTabMovesFocus && !inSnippetMode && !suggestWidgetVisible && editorLangId != 'markdown'"
			},
			{
				"command": "hoody-code.ghost.applyAllSuggestions",
				"key": "shift+tab",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.hasSuggestions"
			},
			{
				"command": "hoody-code.ghost.applyCurrentSuggestions",
				"key": "tab",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.hasSuggestions"
			},
			{
				"command": "hoody-code.ghost.cancelRequest",
				"key": "escape",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.isProcessing"
			},
			{
				"command": "hoody-code.ghost.cancelSuggestions",
				"key": "escape",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.hasSuggestions"
			},
			{
				"command": "hoody-code.ghost.promptCodeSuggestion",
				"key": "ctrl+i",
				"mac": "cmd+i",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.enableQuickInlineTaskKeybinding && !github.copilot.completions.enabled"
			},
			{
				"command": "hoody-code.ghost.generateSuggestions",
				"key": "ctrl+l",
				"mac": "cmd+l",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.enableSmartInlineTaskKeybinding && !github.copilot.completions.enabled"
			},
			{
				"command": "hoody-code.ghost.showIncompatibilityExtensionPopup",
				"key": "ctrl+l",
				"mac": "cmd+l",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.enableSmartInlineTaskKeybinding && github.copilot.completions.enabled"
			},
			{
				"command": "hoody-code.ghost.showIncompatibilityExtensionPopup",
				"key": "ctrl+i",
				"mac": "cmd+i",
				"when": "editorTextFocus && !editorTabMovesFocus && !inSnippetMode && hoodycode.ghost.enableQuickInlineTaskKeybinding && github.copilot.completions.enabled"
			},
			{
				"command": "hoody-code.generateTerminalCommand",
				"key": "ctrl+shift+g",
				"mac": "cmd+shift+g"
			},
			{
				"command": "hoody-code.addToContext",
				"key": "cmd+y",
				"mac": "cmd+y",
				"win": "ctrl+y",
				"linux": "ctrl+y",
				"when": "editorTextFocus && editorHasSelection"
			},
			{
				"command": "hoody-code.toggleAutoApprove",
				"key": "cmd+alt+a",
				"mac": "cmd+alt+a",
				"win": "ctrl+alt+a",
				"linux": "ctrl+alt+a"
			}
		],
		"submenus": [
			{
				"id": "hoody-code.contextMenu",
				"label": "%views.contextMenu.label%"
			},
			{
				"id": "hoody-code.terminalMenu",
				"label": "%views.terminalMenu.label%"
			}
		],
		"configuration": {
			"title": "%configuration.title%",
			"properties": {
				"hoody-code.allowedCommands": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"*"
					],
					"description": "%commands.allowedCommands.description%"
				},
				"hoody-code.deniedCommands": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "%commands.deniedCommands.description%"
				},
				"hoody-code.commandExecutionTimeout": {
					"type": "number",
					"default": 0,
					"minimum": 0,
					"maximum": 600,
					"description": "%commands.commandExecutionTimeout.description%"
				},
				"hoody-code.commandTimeoutAllowlist": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "%commands.commandTimeoutAllowlist.description%"
				},
				"hoody-code.preventCompletionWithOpenTodos": {
					"type": "boolean",
					"default": false,
					"description": "%commands.preventCompletionWithOpenTodos.description%"
				},
				"hoody-code.vsCodeLmModelSelector": {
					"type": "object",
					"properties": {
						"vendor": {
							"type": "string",
							"description": "%settings.vsCodeLmModelSelector.vendor.description%"
						},
						"family": {
							"type": "string",
							"description": "%settings.vsCodeLmModelSelector.family.description%"
						}
					},
					"description": "%settings.vsCodeLmModelSelector.description%"
				},
				"hoody-code.customStoragePath": {
					"type": "string",
					"default": "",
					"description": "%settings.customStoragePath.description%"
				},
				"hoody-code.enableCodeActions": {
					"type": "boolean",
					"default": true,
					"description": "%settings.enableCodeActions.description%"
				},
				"hoody-code.autoImportSettingsPath": {
					"type": "string",
					"default": "",
					"description": "%settings.autoImportSettingsPath.description%"
				},
				"hoody-code.useAgentRules": {
					"type": "boolean",
					"default": true,
					"description": "%settings.useAgentRules.description%"
				},
				"hoody-code.apiRequestTimeout": {
					"type": "number",
					"default": 600,
					"minimum": 0,
					"maximum": 86400,
					"description": "%settings.apiRequestTimeout.description%"
				},
				"hoody-code.newTaskRequireTodos": {
					"type": "boolean",
					"default": false,
					"description": "%settings.newTaskRequireTodos.description%"
				},
				"hoody-code.codeIndex.embeddingBatchSize": {
					"type": "number",
					"default": 60,
					"minimum": 1,
					"maximum": 200,
					"description": "%settings.codeIndex.embeddingBatchSize.description%"
				},
				"hoody-code.apiServer.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable HTTP/WebSocket API server for remote access"
				},
				"hoody-code.apiServer.port": {
					"type": "number",
					"default": 47163,
					"minimum": 1,
					"maximum": 65535,
					"description": "Port for the API server to listen on (default: 47163)"
				},
				"hoody-code.apiServer.host": {
					"type": "string",
					"default": "0.0.0.0",
					"description": "Host address for the API server to bind to (use 0.0.0.0 for remote access)"
				},
				"hoody-code.apiServer.allowedOrigins": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"http://localhost:47163",
						"http://localhost:3001"
					],
					"description": "List of allowed CORS origins for the API server"
				},
				"hoody-code.apiServer.debug": {
					"type": "boolean",
					"default": false,
					"description": "Enable debug logging for the API server"
				}
			}
		},
		"codeActions": [
			{
				"languages": [
					"*"
				],
				"providedCodeActionKinds": [
					"vscode.CodeActionKind.QuickFix"
				]
			}
		]
	},
	"scripts": {
		"lint": "eslint . --ext=ts --max-warnings=0",
		"check-types": "tsc --noEmit",
		"pretest": "turbo run hoody-code#bundle --cwd ..",
		"test": "vitest run",
		"format": "prettier --write .",
		"generate:api-types": "tsx ../scripts/generate-api-types.ts",
		"tsoa:spec": "tsoa spec-and-routes",
		"tsoa:routes": "tsoa routes",
		"tsoa": "tsoa spec-and-routes",
		"prebundle": "pnpm generate:api-types && pnpm tsoa",
		"bundle": "node esbuild.mjs",
		"vscode:prepublish": "pnpm bundle --production",
		"vsix:clean": "rimraf ../bin",
		"vsix": "mkdirp ../bin && vsce package --no-dependencies --out ../bin",
		"vsix:unpacked": "mkdirp ../bin-unpacked && unzip -q -o ../bin/hoody-code-*.vsix -d ../bin-unpacked",
		"publish:marketplace": "vsce publish --no-dependencies && ovsx publish --no-dependencies",
		"watch:bundle": "pnpm bundle --watch",
		"watch:tsc": "cd .. && tsc --noEmit --watch --project src/tsconfig.json",
		"clean": "rimraf README.md CHANGELOG.md LICENSE dist logs mock .turbo services/api-server/generated"
	},
	"dependencies": {
		"@anthropic-ai/bedrock-sdk": "^0.22.0",
		"@anthropic-ai/sdk": "^0.51.0",
		"@anthropic-ai/vertex-sdk": "^0.11.3",
		"@aws-sdk/client-bedrock-runtime": "^3.812.0",
		"@aws-sdk/credential-providers": "^3.806.0",
		"@cerebras/cerebras_cloud_sdk": "^1.35.0",
		"@google/genai": "^1.0.0",
		"@lmstudio/sdk": "^1.1.1",
		"@mistralai/mistralai": "^1.9.18",
		"@modelcontextprotocol/sdk": "1.12.0",
		"@qdrant/js-client-rest": "^1.14.0",
		"@roo-code/cloud": "workspace:^",
		"@roo-code/ipc": "workspace:^",
		"@roo-code/telemetry": "workspace:^",
		"@roo-code/types": "workspace:^",
		"@tsoa/runtime": "^6.6.0",
		"@vscode/codicons": "^0.0.36",
		"async-mutex": "^0.5.0",
		"axios": "^1.12.0",
		"cheerio": "^1.0.0",
		"chokidar": "^4.0.1",
		"clone-deep": "^4.0.1",
		"cors": "^2.8.5",
		"default-shell": "^2.2.0",
		"delay": "^6.0.0",
		"diff": "^5.2.0",
		"diff-match-patch": "^1.0.5",
		"exceljs": "^4.4.0",
		"express": "^4.21.2",
		"fast-deep-equal": "^3.1.3",
		"fast-xml-parser": "^5.0.0",
		"fastest-levenshtein": "^1.0.16",
		"fuse.js": "^7.1.0",
		"fzf": "^0.5.2",
		"get-folder-size": "^5.0.0",
		"google-auth-library": "^9.15.1",
		"gray-matter": "^4.0.3",
		"i18next": "^25.0.0",
		"ignore": "^7.0.3",
		"is-wsl": "^3.1.0",
		"isbinaryfile": "^5.0.2",
		"jsdom": "^26.0.0",
		"json5": "^2.2.3",
		"jwt-decode": "^4.0.0",
		"lodash.debounce": "^4.0.8",
		"lru-cache": "^11.1.0",
		"mammoth": "^1.9.1",
		"monaco-vscode-textmate-theme-converter": "^0.1.7",
		"node-cache": "^5.1.2",
		"node-ipc": "^12.0.0",
		"ollama": "^0.5.17",
		"openai": "^5.12.2",
		"os-name": "^6.0.0",
		"p-limit": "^6.2.0",
		"p-wait-for": "^5.0.2",
		"pdf-parse": "^1.1.1",
		"pkce-challenge": "^5.0.0",
		"pretty-bytes": "^7.0.0",
		"proper-lockfile": "^4.1.2",
		"ps-tree": "^1.2.0",
		"puppeteer-chromium-resolver": "^24.0.0",
		"puppeteer-core": "^23.4.0",
		"reconnecting-eventsource": "^1.6.4",
		"sanitize-filename": "^1.6.3",
		"say": "^0.16.0",
		"serialize-error": "^12.0.0",
		"shiki": "^3.6.0",
		"simple-git": "^3.27.0",
		"socket.io-client": "^4.8.1",
		"sound-play": "^1.1.0",
		"stream-json": "^1.8.0",
		"string-similarity": "^4.0.4",
		"strip-ansi": "^7.1.0",
		"strip-bom": "^5.0.0",
		"tiktoken": "^1.0.21",
		"tmp": "^0.2.3",
		"tree-sitter-wasms": "^0.1.12",
		"turndown": "^7.2.0",
		"undici": "^7.13.0",
		"uri-js": "^4.4.1",
		"uuid": "^11.1.0",
		"vscode-material-icons": "^0.1.1",
		"web-tree-sitter": "^0.25.6",
		"workerpool": "^9.2.0",
		"ws": "^8.18.3",
		"yaml": "^2.8.0",
		"zod": "^3.25.61"
	},
	"devDependencies": {
		"@roo-code/build": "workspace:^",
		"@roo-code/config-eslint": "workspace:^",
		"@roo-code/config-typescript": "workspace:^",
		"@types/clone-deep": "^4.0.4",
		"@types/cors": "^2.8.19",
		"@types/debug": "^4.1.12",
		"@types/diff": "^5.2.3",
		"@types/diff-match-patch": "^1.0.36",
		"@types/express": "^5.0.3",
		"@types/glob": "^8.1.0",
		"@types/jsdom": "^21.1.7",
		"@types/json5": "^2.2.0",
		"@types/lodash.debounce": "^4.0.9",
		"@types/mocha": "^10.0.10",
		"@types/node": "20.x",
		"@types/node-cache": "^4.1.3",
		"@types/node-ipc": "^9.2.3",
		"@types/proper-lockfile": "^4.1.4",
		"@types/ps-tree": "^1.1.6",
		"@types/stream-json": "^1.7.8",
		"@types/string-similarity": "^4.0.2",
		"@types/tmp": "^0.2.6",
		"@types/turndown": "^5.0.5",
		"@types/vscode": "^1.84.0",
		"@types/ws": "^8.18.1",
		"@vscode/test-electron": "^2.5.2",
		"@vscode/vsce": "3.3.2",
		"dotenv": "^16.4.7",
		"esbuild": "^0.25.0",
		"execa": "^9.5.2",
		"glob": "^11.0.1",
		"mkdirp": "^3.0.1",
		"nock": "^14.0.4",
		"npm-run-all2": "^8.0.1",
		"ovsx": "0.10.4",
		"rimraf": "^6.0.1",
		"tsoa": "^6.6.0",
		"tsup": "^8.4.0",
		"tsx": "^4.19.3",
		"typescript": "5.8.3",
		"vitest": "^3.2.3",
		"zod-to-ts": "^1.2.0"
	}
}
